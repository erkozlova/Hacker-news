{"version":3,"sources":["utils/api.ts","constants/actionTypes.ts","actions/getItemComments.ts","reducers/list.ts","reducers/item.ts","reducers/comments.ts","reducers/index.ts","store.ts","components/Appbar/components/Icon.tsx","components/Appbar/Appbar.tsx","pages/Search/components/CircularProgressWithLabel.tsx","utils/dateFormat.tsx","pages/Search/components/Item.tsx","pages/Search/Search.tsx","pages/Item/components/Comment.tsx","pages/Item/Item.tsx","actions/getComments.ts","App.tsx","actions/getList.ts","theme/theme.ts","index.tsx"],"names":["obj","baseUrl","headers","getNews","id","fetch","then","res","json","getComment","GET_LIST_REQUEST","GET_LIST_SUCCESS","GET_LIST_FAILED","GET_LIST_PROCESS","GET_ITEM_SUCCESS","GET_ITEM_FAILED","GET_ITEM_REQUEST","GET_COMMENTS_SUCCESS","GET_COMMENTS_FAILED","GET_COMMENTS_REQUEST","GET_ITEM_COMMENTS_SUCCESS","GET_ITEM_COMMENTS_FAILED","GET_ITEM_COMMENTS_REQUEST","getItemComments","dispatch","a","type","api","itemData","Object","keys","length","Error","kids","Promise","all","map","item","newComments","commentDataObj","reduce","comment","comments","path","payload","data","initialState","isLoading","loadingProcess","setComments","oldComments","copy","JSON","parse","stringify","currentPlace","slice","per","combineReducers","list","state","action","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useSelector","useStyles","makeStyles","theme","refresh","width","height","color","palette","secondary","dark","back","primary","backgroundColor","borderRadius","Icon","handleUpdate","classes","useDispatch","location","useLocation","pathname","handleGetItemComments","useCallback","IconButton","edge","aria-label","onClick","className","appbar","root","display","justifyContent","logo","link","textDecoration","Appbar","AppBar","position","Toolbar","variant","Typography","to","box","percent","fontSize","main","breakpoints","down","circle","CircularProgressWithLabel","props","Box","CircularProgress","value","size","top","left","bottom","right","alignItems","component","dateFormat","time","format","Date","container","marginBottom","padding","title","Item","Grid","spacing","xs","justify","score","gutterBottom","by","sectionLoader","placeItems","sectionNews","sectionNotFound","margin","marginTop","notFound","Search","useEffect","timer","setInterval","clearInterval","Container","commentContainer","marginLeft","wrapper","author","marginRight","button","Comment","handleGetComments","getKidsComments","deleted","dangerouslySetInnerHTML","__html","text","isEmpty","Button","values","boxSizing","flexDirection","wrapper_title","rating","learnMoreLink","subtitle_container","wrapper_subtitle","listStyleType","noComments","useParams","array","commentsId","commentsData","getComments","Number","href","url","app","minHeight","App","news","newsData","filterNewsData","curr","exact","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.e241d36d.chunk.js","sourcesContent":["import { Item } from \"../types\";\r\n\r\nconst obj = {\r\n  baseUrl: \" https://hacker-news.firebaseio.com/v0\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n};\r\n\r\ntype GetNewsResponse = Item;\r\n\r\ntype GetCommentsResponse = {\r\n  by: string;\r\n  id: number;\r\n  kids: number[];\r\n  parent: number;\r\n  text: string;\r\n  type: string;\r\n  time: number;\r\n};\r\n\r\n// Получение списка новостей\r\nexport const getNewsList = (): Promise<number[]> => {\r\n  return fetch(obj.baseUrl + \"/newstories.json?print=pretty\", {\r\n    headers: obj.headers,\r\n  }).then((res) => res.json());\r\n};\r\n\r\n// Получение информации о новости по её id\r\nexport const getNews = (id: number): Promise<GetNewsResponse> => {\r\n  return fetch(obj.baseUrl + `/item/${id}.json?print=pretty`, {\r\n    headers: obj.headers,\r\n  }).then((res) => res.json());\r\n};\r\n\r\n// Получение информации о комментарии по его id\r\nexport const getComment = (id: number): Promise<GetCommentsResponse> => {\r\n  return fetch(obj.baseUrl + `/item/${id}.json?print=pretty`, {\r\n    headers: obj.headers,\r\n  }).then((res) => res.json());\r\n};\r\n","// Константы типов экшенов\r\nexport const GET_LIST_REQUEST = \"GET_LIST_REQUEST\";\r\nexport const GET_LIST_SUCCESS = \"GET_LIST_SUCCESS\";\r\nexport const GET_LIST_FAILED = \"GET_LIST_FAILED\";\r\nexport const GET_LIST_PROCESS = \"GET_LIST_PROCESS\";\r\nexport const GET_ITEM_SUCCESS = \"GET_ITEM_SUCCESS\";\r\nexport const GET_ITEM_FAILED = \"GET_ITEM_FAILED\";\r\nexport const GET_ITEM_REQUEST = \"GET_ITEM_REQUEST\";\r\nexport const GET_COMMENTS_SUCCESS = \"GET_COMMENTS_SUCCESS\";\r\nexport const GET_COMMENTS_FAILED = \"GET_COMMENTS_FAILED\";\r\nexport const GET_COMMENTS_REQUEST = \"GET_COMMENTS_REQUEST\";\r\nexport const GET_ITEM_COMMENTS_SUCCESS = \"GET_ITEM_COMMENTS_SUCCESS\";\r\nexport const GET_ITEM_COMMENTS_FAILED = \"GET_ITEM_COMMENTS_FAILED\";\r\nexport const GET_ITEM_COMMENTS_REQUEST = \"GET_ITEM_COMMENTS_REQUEST\";\r\n","import * as api from \"../utils/api\";\r\nimport {\r\n GET_ITEM_COMMENTS_SUCCESS,\r\n GET_ITEM_COMMENTS_FAILED,\r\n GET_ITEM_COMMENTS_REQUEST,\r\n\r\n  GET_COMMENTS_SUCCESS,\r\n  GET_COMMENTS_REQUEST,\r\n} from \"../constants\";\r\nimport { Comment } from \"../types\";\r\nimport { GetItemCommentThunk } from \"./types\";\r\n\r\n// Загружает информацию о выбранной новости и список комментарев к ней\r\nexport const getItemComments = (id: number): GetItemCommentThunk => async (dispatch) => {\r\n  dispatch({\r\n    type:GET_ITEM_COMMENTS_REQUEST,\r\n  });\r\n\r\n  try {\r\n    // Получаем информацию о открытой новости с сервера\r\n    const itemData = await api.getNews(id);\r\n\r\n    // Если информация пустая, выбрасываем ошибку\r\n    if (!Object.keys(itemData).length) {\r\n      throw new Error(\"Not found\");\r\n    }\r\n\r\n    // Если у новости есть комментарии, хотим получить их с сервера\r\n    if (itemData.kids && itemData.kids.length) {\r\n      dispatch({\r\n        type: GET_COMMENTS_REQUEST,\r\n      });\r\n\r\n      // Получаем комментарии к этой новости с сервера\r\n      const newComments = await Promise.all(\r\n        itemData.kids.map((item) => {\r\n          return api.getComment(item);\r\n        })\r\n      );\r\n\r\n      // Если нет комментариев, выбрасываем обишку\r\n      if (!newComments || !newComments.length) {\r\n        throw new Error(\"Not found\");\r\n      }\r\n\r\n      // Собираем информацию о каждом комментарии в объект, добавив путь, где он должен хранится в стейте комментариев\r\n      const commentDataObj = newComments.reduce((obj, comment) => {\r\n        obj[comment.id] = {\r\n          ...comment,\r\n          comments: {},\r\n          path: [comment.id],\r\n        };\r\n        return obj;\r\n      }, {} as Record<number, Comment>);\r\n\r\n      dispatch({\r\n        type: GET_COMMENTS_SUCCESS,\r\n        payload: {\r\n          data: commentDataObj,\r\n          path: [],\r\n        },\r\n      });\r\n    }\r\n\r\n    // После получаея комментариев отправляем в редюсер информацио о новости\r\n    return dispatch({\r\n      type:GET_ITEM_COMMENTS_SUCCESS,\r\n      payload: itemData,\r\n    });\r\n  } catch (_) {\r\n    return dispatch({\r\n      type:GET_ITEM_COMMENTS_FAILED,\r\n    });\r\n  }\r\n};\r\n","import { GetListActions } from \"../actions/types\";\r\nimport {\r\n  GET_LIST_REQUEST,\r\n  GET_LIST_SUCCESS,\r\n  GET_LIST_FAILED,\r\n  GET_LIST_PROCESS,\r\n} from \"../constants\";\r\nimport { Item } from \"../types\";\r\n\r\ntype State = {\r\n  data: Item[];\r\n  isLoading: boolean;\r\n  loadingProcess: number;\r\n}\r\n\r\nexport const initialState: State = { data: [], isLoading: false, loadingProcess: 0 };\r\n\r\nexport const list = (state = initialState, action: GetListActions) => {\r\n  switch (action.type) {\r\n    case GET_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case GET_LIST_PROCESS:\r\n      return {\r\n        ...state,\r\n        loadingProcess: state.loadingProcess + 1,\r\n      };\r\n\r\n    case GET_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        isLoading: false,\r\n        loadingProcess: 0,\r\n      };\r\n\r\n    case GET_LIST_FAILED:\r\n      return {\r\n        ...state,\r\n        data: [],\r\n        isLoading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GetItemActions, GetItemCommentActions } from \"../actions/types\";\r\nimport {\r\n  GET_ITEM_SUCCESS,\r\n  GET_ITEM_FAILED,\r\n  GET_ITEM_REQUEST,\r\n GET_ITEM_COMMENTS_FAILED,\r\n GET_ITEM_COMMENTS_REQUEST,\r\n GET_ITEM_COMMENTS_SUCCESS,\r\n} from \"../constants\";\r\nimport { Item } from \"../types\";\r\n\r\ntype State = {\r\n  data: Item | null;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const initialState: State = { data: null, isLoading: false };\r\n\r\nexport const item = (state = initialState, action: GetItemActions | GetItemCommentActions) => {\r\n  switch (action.type) {\r\n    case GET_ITEM_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case GET_ITEM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        isLoading: false,\r\n      };\r\n\r\n    case GET_ITEM_FAILED:\r\n      return {\r\n        ...state,\r\n        data: null,\r\n        isLoading: false,\r\n      };\r\n    case GET_ITEM_COMMENTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case GET_ITEM_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        isLoading: false,\r\n      };\r\n\r\n    case GET_ITEM_COMMENTS_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { GetCommentsActions } from \"../actions/types\";\r\nimport {\r\n  GET_COMMENTS_SUCCESS,\r\n  GET_COMMENTS_FAILED,\r\n  GET_COMMENTS_REQUEST,\r\n} from \"../constants\";\r\nimport { Comment } from \"../types\";\r\n\r\ntype State = {\r\n  data: Record<number, Comment> | null;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const initialState: State = { data: null, isLoading: false };\r\n\r\nconst setComments = (oldComments: Record<number, Comment> | null, data: Record<number, Comment>, path: number[]) => {\r\n  if (!path.length) {\r\n    return data;\r\n  }\r\n\r\n  const copy: Record<number, Comment> = JSON.parse(JSON.stringify(oldComments || {}));\r\n  if (path.length > 1) {\r\n    const currentPlace = copy[path[0]];\r\n    currentPlace.comments = setComments(\r\n      currentPlace.comments,\r\n      data,\r\n      path.slice(1)\r\n    );\r\n  } else {\r\n    copy[path[0]].comments = data;\r\n  }\r\n\r\n  return copy;\r\n};\r\n\r\nexport const comments = (state = initialState, action: GetCommentsActions) => {\r\n  switch (action.type) {\r\n    case GET_COMMENTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case GET_COMMENTS_SUCCESS:\r\n      const obj = setComments(\r\n        state.data,\r\n        action.payload.data,\r\n        action.payload.path\r\n      );\r\n      return {\r\n        ...state,\r\n        data: obj,\r\n        isLoading: false,\r\n      };\r\n\r\n    case GET_COMMENTS_FAILED:\r\n      return {\r\n        ...state,\r\n        data: {},\r\n        isLoading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { list } from \"./list\";\r\nimport { item } from \"./item\";\r\nimport { comments } from \"./comments\";\r\n\r\nconst per = combineReducers({\r\n  list,\r\n  item,\r\n  comments,\r\n});\r\nexport default  per;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type RootState = ReturnType<typeof reducer>;\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React, { FC, useCallback } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { getItemComments } from '../../../actions';\r\nimport { useAppSelector } from \"../../../store\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  refresh: {\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n    color: theme.palette.secondary.dark,\r\n  },\r\n  back: {\r\n    color: theme.palette.primary.dark,\r\n    backgroundColor: theme.palette.secondary.dark,\r\n    borderRadius: \"4px\",\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  handleUpdate: () => void;\r\n}\r\n\r\nexport const Icon: FC<Props> = ({ handleUpdate }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const location = useLocation().pathname;\r\n  const id = useAppSelector((state) => state.item.data?.id)\r\n\r\n  // Получение информации о новости и её комментариях\r\n  const handleGetItemComments = useCallback((id) => {\r\n    dispatch(getItemComments(id))\r\n  }, [dispatch]);\r\n\r\n  // Выбор типа обновление страницы, в зависимости от пути\r\n  const onClickFunction = () => {\r\n    if(location === '/') {\r\n      // Обновляем список новостей\r\n      handleUpdate();\r\n    }\r\n    else {\r\n      // Обновляем страницу новости\r\n      handleGetItemComments(id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <IconButton edge=\"end\" aria-label=\"refresh\" onClick={onClickFunction}>\r\n      <RefreshIcon className={classes.refresh} />\r\n    </IconButton>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Icon } from \"./components/Icon\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appbar: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  logo: {\r\n    color: theme.palette.secondary.dark,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  handleUpdate: () => void;\r\n}\r\n\r\nexport const Appbar: FC<Props> = ({ handleUpdate }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <section>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Toolbar variant=\"dense\" className={classes.root}>\r\n          <Typography variant=\"h4\" className={classes.logo}>\r\n            <Link to=\"/\" className={classes.link}>\r\n              News\r\n            </Link>\r\n          </Typography>\r\n          <Icon handleUpdate={handleUpdate} />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Typography, CircularProgress, Box } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    width: \"25vh\",\r\n    height: \"25vh\",\r\n  },\r\n  percent: {\r\n    fontSize: \"55px\",\r\n    color: theme.palette.secondary.main,\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: \"44px\",\r\n    },\r\n  },\r\n  circle: {\r\n    color: theme.palette.secondary.dark,\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  loadingProcess: number;\r\n}\r\n\r\nexport const CircularProgressWithLabel: FC<Props> = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\" className={classes.box}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        value={props.loadingProcess}\r\n        className={classes.circle}\r\n        size=\"100%\"\r\n      />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography\r\n          component=\"span\"\r\n          color=\"textSecondary\"\r\n          className={classes.percent}\r\n        >{`${props.loadingProcess}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};","import { format } from \"date-fns\";\r\n\r\nexport const dateFormat = (time: number) => {\r\n  return format(new Date(time * 1000), \"MM.dd k:mm\");\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { dateFormat } from \"../../../utils/dateFormat\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    marginBottom: \"10px\",\r\n    padding: \"15px\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  title: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"18px\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  time: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"12px\",\r\n    },\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  item: {\r\n    score: number;\r\n    title: string;\r\n    by: string;\r\n    time: number;\r\n  }\r\n}\r\n\r\n// Компонента карточки новости в списке\r\nexport const Item: FC<Props> = ({ item }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <article className={classes.container}>\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          item\r\n          xs={1}\r\n          container\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n        >\r\n          <Typography component=\"span\">{item.score}</Typography>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <Typography variant=\"h5\" className={classes.title} gutterBottom>\r\n            {item.title}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\">\r\n            {`Author: ${item.by}`}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={2} container alignItems=\"center\" justify=\"center\">\r\n          <Typography component=\"span\" className={classes.time}>\r\n            {dateFormat(item.time)}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </article>\r\n  );\r\n};\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CircularProgressWithLabel } from \"./components/CircularProgressWithLabel\";\r\nimport { Item } from \"./components/Item\";\r\nimport { useAppSelector } from \"../../store\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sectionLoader: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    height: \"100vh\",\r\n  },\r\n  sectionNews: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  sectionNotFound: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    width: \"1000px\",\r\n    height: \"100px\",\r\n    margin: \"0 auto\",\r\n    borderRadius: \"5px\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  list: {\r\n    padding: \"0\",\r\n    marginTop: \"20px\",\r\n  },\r\n  notFound: {\r\n    marginTop: \"100px\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"#000\",\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  handleUpdate: () => void;\r\n}\r\n\r\n// Компонента списка новостей\r\nexport const Search: FC<Props> = ({ handleUpdate }) => {\r\n  const classes = useStyles();\r\n\r\n  // Получение значений стейтов\r\n  const isLoading = useAppSelector((state) => state.list.isLoading);\r\n  const data = useAppSelector((state) => state.list.data);\r\n  const loadingProcess = useAppSelector((state) => state.list.loadingProcess);\r\n\r\n  // Интервал обновления новостей\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      handleUpdate();\r\n    }, 60000);\r\n\r\n    // Первый запрос новостей\r\n    handleUpdate();\r\n\r\n    // Удаление интервала при демонтировании секции новостей\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [handleUpdate]);\r\n\r\n  // При загрузке данных отрисовывается лоадер\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.sectionLoader}>\r\n        <CircularProgressWithLabel loadingProcess={loadingProcess} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  // При отсутсвии данных с сервера\r\n  if (!data.length) {\r\n    return (\r\n      <section className={classes.sectionNotFound}>\r\n        <Typography variant=\"h2\" className={classes.notFound}>\r\n          Not found\r\n        </Typography>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className={classes.sectionNews}>\r\n      <Container>\r\n        <ul className={classes.list}>\r\n          {data.map((item) => {\r\n            return (\r\n              <Link key={item.id} to={`/${item.id}`} className={classes.link}>\r\n                <Item item={item} />\r\n              </Link>\r\n            );\r\n          })}\r\n        </ul>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\nimport { dateFormat } from \"../../../utils/dateFormat\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Comment as CommentType } from \"../../../types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  commentContainer: {\r\n    marginLeft: \"20px\",\r\n  },\r\n  comment: {\r\n    marginBottom: \"20px\",\r\n    width: \"100%\",\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  author: {\r\n    marginRight: \"10px\",\r\n  },\r\n  time: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    marginTop: \"10px\",\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  comment: CommentType;\r\n  handleGetComments: (arg1: number[], arg2: number[]) => void;\r\n}\r\n\r\n// Компонента комментария к новости\r\nexport const Comment: FC<Props> = ({ comment, handleGetComments }) => {\r\n  const classes = useStyles();\r\n\r\n  // Получение дочерних комментариев по клику\r\n  const getKidsComments = useCallback(() => {\r\n    handleGetComments(comment.kids, comment.path);\r\n  }, [handleGetComments, comment]);\r\n\r\n  // Если комментарии удален, отрисовываем сообщение \r\n  if (comment.deleted) {\r\n    return (\r\n      <li className={classes.commentContainer}>\r\n        <Typography variant=\"h6\" component=\"h4\" color=\"textSecondary\">\r\n          This comment was deleted\r\n        </Typography>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  // Отрисовываем список вложенных комментариев через рекурсию\r\n  return (\r\n    <li className={classes.commentContainer}>\r\n      <div className={classes.comment}>\r\n        <div className={classes.wrapper}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            component=\"span\"\r\n            className={classes.author}\r\n          >{`Author: ${comment.by}`}</Typography>\r\n          <Typography variant=\"h6\" component=\"span\" className={classes.time}>\r\n            {dateFormat(comment.time)}\r\n          </Typography>\r\n        </div>\r\n        <Typography\r\n          variant=\"body1\"\r\n          component=\"p\"\r\n          dangerouslySetInnerHTML={{ __html: comment.text }}\r\n        />\r\n        {comment.kids && isEmpty(comment.comments) && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={getKidsComments}\r\n          >\r\n            See more comments\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <ul>\r\n        {Object.values(comment.comments).map((item) => (\r\n          <Comment\r\n            key={item.id}\r\n            comment={item}\r\n            handleGetComments={handleGetComments}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useEffect, useCallback, FC } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Typography, Container, Box, CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { dateFormat } from \"../../utils/dateFormat\";\r\nimport { getComments, getItemComments } from \"../../actions\";\r\nimport { Comment } from \"./components/Comment\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sectionLoader: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    height: \"100vh\",\r\n  },\r\n  circle: {\r\n    color: theme.palette.secondary.dark,\r\n    width: '25vh',\r\n    height: '25vh',\r\n  },\r\n  main: {\r\n    margin: \"50px 0\",\r\n    boxSizing: \"border-box\",\r\n    padding: \"10px\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n    borderRadius: \"6px\",\r\n  },\r\n  wrapper_title: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: \"30px\",\r\n  },\r\n  rating: {\r\n    width: \"42px\",\r\n    height: \"42px\",\r\n    marginLeft: \"30px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: theme.palette.secondary.dark,\r\n    borderRadius: \"50%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"30px\",\r\n      height: \"30px\",\r\n    },\r\n  },\r\n  score: {\r\n    fontSize: \"20px\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  title: {\r\n    width: \"90%\",\r\n    marginLeft: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"40px\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"20px\",\r\n    },\r\n  },\r\n  learnMoreLink: {\r\n    color: theme.palette.secondary.dark,\r\n    marginLeft: \"102px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: \"80px\",\r\n      fontSize: \"15px\",\r\n    },\r\n  },\r\n  subtitle_container: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"30px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  wrapper_subtitle: {\r\n    display: \"flex\",\r\n  },\r\n  author: {\r\n    marginRight: \"20px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"15px\",\r\n    },\r\n  },\r\n  time: {\r\n    marginRight: \"20px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"15px\",\r\n    },\r\n  },\r\n  comments: {\r\n    marginLeft: \"60px\",\r\n    marginBottom: \"20px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"30px\",\r\n    },\r\n  },\r\n  list: {\r\n    padding: \"0 60px\",\r\n    listStyleType: \"none\",\r\n  },\r\n  noComments: {\r\n    marginLeft: \"102px\",\r\n    marginBottom: \"30px\",\r\n  },\r\n}));\r\n\r\n// Компонента новости на отдельной странице\r\nexport const Item: FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  // Получение данных из стейта\r\n  const item = useAppSelector((state) => state.item.data);\r\n  const comments = useAppSelector((state) => state.comments.data);\r\n  const isLoading = useAppSelector((state) => state.item.isLoading);\r\n\r\n  // Получение информации о новости и комментариев\r\n  const handleGetItemComments = useCallback(\r\n    (id) => {\r\n      dispatch(getItemComments(id));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // Получение вложенных комментариев при клике на комментарий\r\n  const handleGetComments = useCallback(\r\n    (array, path) => {\r\n      dispatch(getComments(array, path));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // Получение информации при первой отрисовке новости\r\n  useEffect(() => {\r\n    handleGetItemComments(Number(id));\r\n  }, [handleGetItemComments, id]);\r\n\r\n  // Интервал получения информации\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      handleGetItemComments(Number(id));\r\n    }, 60000);\r\n\r\n    // Удаление интервала при демонтировании новости\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [id, handleGetItemComments]);\r\n\r\n  // При загрузке отрисовывается загрузчик\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.sectionLoader}>\r\n        <CircularProgress size=\"25vh\" className={classes.circle}/>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  // При отсутствии информации о новости\r\n  if (!item) {\r\n    return null;\r\n  }\r\n\r\n  // Возвращаем верстку новости. И комментариев, если они есть, в противном случае Сообщение об отсутсвии комментариев\r\n  return (\r\n    <Container>\r\n      <main className={classes.main}>\r\n        <div className={classes.wrapper_title}>\r\n          <Box className={classes.rating}>\r\n            <Typography component=\"span\" className={classes.score}>\r\n              {item.score}\r\n            </Typography>\r\n          </Box>\r\n          <Typography variant=\"h2\" component=\"h2\" className={classes.title}>\r\n            {item.title}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.subtitle_container}>\r\n          <Typography\r\n            variant=\"h5\"\r\n            component=\"span\"\r\n            className={classes.learnMoreLink}\r\n          >\r\n            <a href={item.url}>Learn more</a>\r\n          </Typography>\r\n          <div className={classes.wrapper_subtitle}>\r\n            <Typography\r\n              variant=\"h5\"\r\n              component=\"span\"\r\n              className={classes.author}\r\n            >{`Author: ${item.by}`}</Typography>\r\n            <Typography variant=\"h5\" component=\"span\" className={classes.time}>\r\n              {dateFormat(item.time)}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        {comments && item.kids ? (\r\n          <>\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"h3\"\r\n              className={classes.comments}\r\n            >\r\n              Comments({item.kids.length}):\r\n            </Typography>\r\n            <ul className={classes.list}>\r\n              {item.kids.map((id) => (\r\n                <Comment\r\n                  comment={comments[id]}\r\n                  key={comments[id].id}\r\n                  handleGetComments={handleGetComments}\r\n                />\r\n              ))}\r\n            </ul>\r\n          </>\r\n        ) : (\r\n          <Typography variant=\"h4\" component=\"p\" className={classes.noComments}>\r\n            There are no comments yet\r\n          </Typography>\r\n        )}\r\n      </main>\r\n    </Container>\r\n  );\r\n};\r\n","import * as api from \"../utils/api\";\r\nimport { GET_COMMENTS_SUCCESS, GET_COMMENTS_FAILED, GET_COMMENTS_REQUEST } from \"../constants\";\r\nimport { Comment } from \"../types\";\r\nimport { GetCommentsThunk } from \"./types\";\r\n\r\n// Загрузка вложеных комментариев к кликнутому комментарию\r\nexport const getComments = (commentsId: number[], path=[]): GetCommentsThunk => async (dispatch) => {\r\n  dispatch({\r\n    type: GET_COMMENTS_REQUEST,\r\n  });\r\n\r\n  try {\r\n    // Если у комментария нет вложенного, выбрасываем ошибку\r\n    if(!commentsId.length) {\r\n      throw new Error(\"Not found\");\r\n    }\r\n\r\n    // Получаем информацию о вложенных комментариях\r\n    const commentsData = await Promise.all(\r\n      commentsId.map(( item) => { \r\n        return api.getComment(item);\r\n    }));\r\n\r\n    // Если с сервера не пришло комментариев, выбрасываем ошибку\r\n    if(!commentsData.length) {\r\n      throw new Error(\"Not found\");\r\n    }\r\n\r\n    // Записываем информацию о комментариях в объект, добавляя путь, где в стейте должен хранится каждый комментарий\r\n    const commentDataObj = commentsData.reduce((obj, comment) => {\r\n      obj[comment.id] = {\r\n        ...comment,\r\n        comments: {},\r\n        path: [...path, comment.id]\r\n      };\r\n      return obj;\r\n    }, {} as Record<number, Comment>);\r\n\r\n    return dispatch({\r\n      type: GET_COMMENTS_SUCCESS,\r\n      payload: {\r\n        data: commentDataObj,\r\n        path,\r\n      }\r\n    });\r\n  } catch (err) {\r\n    return dispatch({\r\n      type: GET_COMMENTS_FAILED,\r\n    });\r\n  }\r\n};\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Appbar } from \"./components/Appbar/Appbar\";\r\nimport { Search } from \"./pages/Search/Search\";\r\nimport { Item } from \"./pages/Item/Item\";\r\nimport { getList } from \"./actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  app: {\r\n    minHeight: \"100vh\",\r\n  },\r\n}));\r\n\r\nexport const App: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // Получение списка новостей\r\n  const handleUpdate = useCallback(() => {\r\n    dispatch(getList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={classes.app}>\r\n      <Appbar handleUpdate={handleUpdate} />\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <Search handleUpdate={handleUpdate} />\r\n        </Route>\r\n        <Route path='/:id'>\r\n          <Item />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","import * as api from \"../utils/api\";\r\nimport {\r\n  GET_LIST_REQUEST,\r\n  GET_LIST_SUCCESS,\r\n  GET_LIST_FAILED,\r\n  GET_LIST_PROCESS,\r\n} from \"../constants\";\r\nimport { Item } from \"../types\";\r\nimport { GetListThunk } from \"./types\";\r\n\r\n// Загружает список новостей\r\nexport const getList = (): GetListThunk => async (dispatch) => {\r\n  dispatch({\r\n    type: GET_LIST_REQUEST,\r\n  });\r\n\r\n  try {\r\n    // Получаем с сервера список свежих новостей (500 новостей)\r\n    const data = await api.getNewsList();\r\n\r\n    // Если нет данных, кидаем ошибку\r\n    if (!data || !data.length) {\r\n      throw new Error(\"Not found\");\r\n    }\r\n\r\n    // Выбираем первые 100 (самые свежие)\r\n    const news = data.slice(0, 100);\r\n\r\n    // Получаем информации о каждой новости\r\n    const newsData = await Promise.all(\r\n      news.reduce((array, item) => {\r\n        const itemData = api.getNews(item).then((res) => {\r\n          // Изменяем количество пришедших новостей для отображения в лоадере\r\n          dispatch({\r\n            type: GET_LIST_PROCESS,\r\n          });\r\n          return res;\r\n        });\r\n        \r\n        return [...array, itemData];\r\n      }, [] as Promise<Item>[])\r\n    );\r\n\r\n    // Отбираем не пустые новости\r\n    const filterNewsData = newsData.reduce(\r\n      (array, curr) => (curr ? [...array, curr] : array),\r\n      [] as Item[]\r\n    );\r\n\r\n    return dispatch({\r\n      type: GET_LIST_SUCCESS,\r\n      payload: filterNewsData,\r\n    });\r\n  } catch (_) {\r\n    return dispatch({\r\n      type: GET_LIST_FAILED,\r\n    });\r\n  }\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#314e52\",\r\n      dark: \"#263f44\",\r\n    },\r\n    secondary: {\r\n      main: \"#fff1cf\",\r\n      dark: \"#f2a154\",\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport \"./index.css\";\r\nimport { App } from \"./App\";\r\nimport { store } from \"./store\";\r\nimport { theme } from \"./theme/theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n        <Provider store={store}>\r\n          <ThemeProvider theme={theme}>\r\n            <App />\r\n          </ThemeProvider>\r\n        </Provider>\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}